{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MovieService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl;\n  }\n  getMovies(title) {\n    return this.http.get(`${this.apiUrl}&s=${title}`);\n  }\n  getMovieById(id) {\n    return this.http.get(`${this.apiUrl}&i=${id}`);\n  }\n}\nMovieService.ɵfac = function MovieService_Factory(t) {\n  return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient));\n};\nMovieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MovieService,\n  factory: MovieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,gCAAgC;;;AAM5D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAGH,WAAW,CAACI,MAAM;EAEI;EAEhCC,SAAS,CAACC,KAAa;IAC5B,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAuB,GAAG,IAAI,CAACH,MAAM,MAAME,KAAK,EAAE,CAAC;EACzE;EAEOE,YAAY,CAACC,EAAU;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAS,GAAG,IAAI,CAACH,MAAM,MAAMK,EAAE,EAAE,CAAC;EACxD;;AAXWR,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAS,SAAZT,YAAY;EAAAU,YAFX;AAAM","names":["environment","MovieService","constructor","http","apiUrl","getMovies","title","get","getMovieById","id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\55989\\Documents\\Projetos-WEB\\Angular\\angular-movie-listing-main\\src\\app\\services\\movie.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { IDataMovie, IMovie } from '../interfaces/movie';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MovieService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  public getMovies(title: string): Observable<IDataMovie<IMovie[]>> {\n    return this.http.get<IDataMovie<IMovie[]>>(`${this.apiUrl}&s=${title}`);\n  }\n\n  public getMovieById(id: string): Observable<IMovie> {\n    return this.http.get<IMovie>(`${this.apiUrl}&i=${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
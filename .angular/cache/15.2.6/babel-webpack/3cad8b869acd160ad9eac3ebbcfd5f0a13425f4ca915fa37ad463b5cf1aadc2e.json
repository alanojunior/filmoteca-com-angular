{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/core/services/autenticacao.service\";\nimport * as i3 from \"@angular/router\";\nfunction LoginComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"E-mail \\u00E9 obrigat\\u00F3rio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"E-mail inv\\u00E1lido\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Senha \\u00E9 obrigat\\u00F3ria\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, authService, router) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: [null, [Validators.required, Validators.email]],\n      senha: [null, Validators.required]\n    });\n  }\n  login() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.value.email;\n      const senha = this.loginForm.value.senha;\n      this.authService.autenticar(email, senha).subscribe({\n        next: value => {\n          console.log('Autenticado com sucesso', value);\n          this.router.navigateByUrl('/');\n          this.loginForm.reset();\n        },\n        error: err => {\n          console.log('Problema na autenticação', err);\n        }\n      });\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AutenticacaoService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 32,\n  vars: 5,\n  consts: [[\"src\", \"assets/imagens/banner-login.png\", \"alt\", \"Banner da tela de login\"], [1, \"login-component\"], [1, \"login\"], [1, \"image-container\"], [\"src\", \"assets/imagens/simbolo-bussola.png\", \"alt\", \"S\\u00EDmbolo de uma b\\u00FAssola laranja\"], [1, \"form-container\"], [3, \"formGroup\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"type\", \"email\", \"placeholder\", \"Digite seu e-mail\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"senha\", \"type\", \"password\", \"placeholder\", \"Digite sua senha\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [\"routerLink\", \"/cadastro\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-banner\", 0);\n      i0.ɵɵelementStart(1, \"section\", 1)(2, \"mat-card\", 2)(3, \"div\", 3)(4, \"figure\");\n      i0.ɵɵelement(5, \"img\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"mat-card-header\")(8, \"mat-card-title\");\n      i0.ɵɵtext(9, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"form\", 6)(11, \"mat-card-content\")(12, \"mat-form-field\", 7)(13, \"mat-label\");\n      i0.ɵɵtext(14, \"E-mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 8);\n      i0.ɵɵtemplate(16, LoginComponent_mat_error_16_Template, 2, 0, \"mat-error\", 9);\n      i0.ɵɵtemplate(17, LoginComponent_mat_error_17_Template, 2, 0, \"mat-error\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"mat-form-field\", 7)(19, \"mat-label\");\n      i0.ɵɵtext(20, \"Senha\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 10);\n      i0.ɵɵtemplate(22, LoginComponent_mat_error_22_Template, 2, 0, \"mat-error\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"mat-card-actions\")(24, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_24_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(25, \" ACESSAR MINHA CONTA \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"p\");\n      i0.ɵɵtext(27, \"Ainda n\\u00E3o possui conta? \");\n      i0.ɵɵelementStart(28, \"a\", 12)(29, \"strong\")(30, \"u\");\n      i0.ɵɵtext(31, \"Clique aqui para se cadastrar!\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"email\"]);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.loginForm.get(\"senha\")) == null ? null : tmp_3_0.errors);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  styles: [\".login-component[_ngcontent-%COMP%] {\\n  max-width: 50%;\\n  min-height: 74%;\\n  overflow-y: hidden;\\n  display: flex;\\n  flex-direction: column;\\n  margin: 0 auto;\\n}\\n.login-component[_ngcontent-%COMP%]   .login[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  margin-top: 68px;\\n}\\n.login-component[_ngcontent-%COMP%]   .image-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.login-component[_ngcontent-%COMP%]   .form-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  padding-bottom: 16px;\\n}\\n.login-component[_ngcontent-%COMP%]   .form-container[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%] {\\n  margin-bottom: 24px;\\n}\\n.login-component[_ngcontent-%COMP%]   .form-container[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%] {\\n  font-size: 32px;\\n  font-weight: 400;\\n}\\n.login-component[_ngcontent-%COMP%]   .form-container[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n}\\n.login-component[_ngcontent-%COMP%]   .form-container[_ngcontent-%COMP%]   mat-card-actions[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: normal;\\n}\\n.login-component[_ngcontent-%COMP%]   .form-container[_ngcontent-%COMP%]   mat-card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  margin: 0 8px;\\n  margin-bottom: 16px;\\n}\\n.login-component[_ngcontent-%COMP%]   .form-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n  font-weight: 500;\\n}\\n.login-component[_ngcontent-%COMP%]   .form-container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n.login-component[_ngcontent-%COMP%]   .form-container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:active {\\n  color: #551A8B;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsY0FBQTtBQUNGO0FBQ0U7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0FBQ0o7QUFFRTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FBQUo7QUFHRTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG9CQUFBO0FBREo7QUFHSTtFQUNFLG1CQUFBO0FBRE47QUFHTTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtBQURSO0FBS0k7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxRQUFBO0FBSE47QUFNSTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0FBSk47QUFNTTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUpSO0FBUUk7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7QUFOTjtBQVNJO0VBQ0UsZUFBQTtBQVBOO0FBU007RUFDRSxjQUFBO0FBUFIiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tY29tcG9uZW50IHtcbiAgbWF4LXdpZHRoOiA1MCU7XG4gIG1pbi1oZWlnaHQ6IDc0JTtcbiAgb3ZlcmZsb3cteTogaGlkZGVuO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXJnaW46IDAgYXV0bztcblxuICAubG9naW4ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXJnaW4tdG9wOiA2OHB4O1xuICB9XG5cbiAgLmltYWdlLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG5cbiAgLmZvcm0tY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcGFkZGluZy1ib3R0b206IDE2cHg7XG5cbiAgICBtYXQtY2FyZC1oZWFkZXIge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMjRweDtcblxuICAgICAgbWF0LWNhcmQtdGl0bGUge1xuICAgICAgICBmb250LXNpemU6IDMycHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWF0LWNhcmQtY29udGVudCB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGdhcDogOHB4O1xuICAgIH1cblxuICAgIG1hdC1jYXJkLWFjdGlvbnMge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBhbGlnbi1pdGVtczogbm9ybWFsO1xuXG4gICAgICBidXR0b24ge1xuICAgICAgICBtYXJnaW46IDAgOHB4O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgICAgfVxuICAgIH1cblxuICAgIHAge1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICB9XG5cbiAgICBhIHtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICAgJjphY3RpdmUge1xuICAgICAgICBjb2xvcjogIzU1MUE4QjtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;ICmBvDC,iCAAgE;IAAAA,8CAAoB;IAAAA,iBAAY;;;;;IAChGA,iCAA6D;IAAAA,oCAAe;IAAAA,iBAAY;;;;;IAKxFA,iCAAkD;IAAAA,6CAAmB;IAAAA,iBAAY;;;ADhB7F,OAAM,MAAOC,cAAc;EAIzBC,YACUC,WAAwB,EACxBC,WAAgC,EAChCC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;EACb;EAEHC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACtCC,KAAK,EAAE,CAAC,IAAI,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACU,KAAK,CAAC,CAAC;MACtDE,KAAK,EAAE,CAAC,IAAI,EAAEZ,UAAU,CAACW,QAAQ;KAClC,CAAC;EACJ;EAEAE,KAAK;IACH,IAAG,IAAI,CAACL,SAAS,CAACM,KAAK,EAAE;MACvB,MAAMJ,KAAK,GAAG,IAAI,CAACF,SAAS,CAACO,KAAK,CAACL,KAAK;MACxC,MAAME,KAAK,GAAG,IAAI,CAACJ,SAAS,CAACO,KAAK,CAACH,KAAK;MACxC,IAAI,CAACP,WAAW,CAACW,UAAU,CAACN,KAAK,EAAEE,KAAK,CAAC,CAACK,SAAS,CAAC;QAClDC,IAAI,EAAGH,KAAK,IAAI;UACdI,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEL,KAAK,CAAC;UAC7C,IAAI,CAACT,MAAM,CAACe,aAAa,CAAC,GAAG,CAAC;UAC9B,IAAI,CAACb,SAAS,CAACc,KAAK,EAAE;QACxB,CAAC;QACDC,KAAK,EAAGC,GAAG,IAAI;UACbL,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEI,GAAG,CAAC;QAC9C;OACD,CAAC;;EAEN;;AAhCWtB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3B5B,gCAGa;MACbA,kCAAiC;MAIzBA,yBAAmF;MACrFA,iBAAS;MAEXA,8BAA4B;MAERA,qBAAK;MAAAA,iBAAiB;MAExCA,gCAA8B;MAGbA,uBAAM;MAAAA,iBAAY;MAC7BA,4BAAqF;MACrFA,6EAAgG;MAChGA,6EAAwF;MAC1FA,iBAAiB;MACjBA,0CAAqC;MACxBA,sBAAK;MAAAA,iBAAY;MAC5BA,6BAAuF;MACvFA,6EAAiF;MACnFA,iBAAiB;MAEnBA,yCAAkB;MACuDA;QAAA,OAAS6B,WAAO;MAAA,EAAC;MACtF7B,sCACF;MAAAA,iBAAS;MAEXA,0BAAG;MAAAA,8CACD;MAAAA,8BAA0B;MAAWA,+CAA8B;MAAAA,iBAAI;;;;;;MApBrEA,gBAAuB;MAAvBA,yCAAuB;MAKXA,eAAkD;MAAlDA,yIAAkD;MAClDA,eAA+C;MAA/CA,sIAA+C;MAK/CA,eAAoC;MAApCA,6FAAoC;MAI1CA,eAA8B;MAA9BA,gDAA8B","names":["Validators","i0","LoginComponent","constructor","formBuilder","authService","router","ngOnInit","loginForm","group","email","required","senha","login","valid","value","autenticar","subscribe","next","console","log","navigateByUrl","reset","error","err","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\55989\\Documents\\Projetos-WEB\\Angular\\angular-movie-listing-main\\src\\app\\pages\\login\\login.component.ts","C:\\Users\\55989\\Documents\\Projetos-WEB\\Angular\\angular-movie-listing-main\\src\\app\\pages\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AutenticacaoService } from 'src/app/core/services/autenticacao.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit{\n\n  loginForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AutenticacaoService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: [null, [Validators.required, Validators.email]],\n      senha: [null, Validators.required]\n    })\n  }\n\n  login() {\n    if(this.loginForm.valid) {\n      const email = this.loginForm.value.email;\n      const senha = this.loginForm.value.senha;\n      this.authService.autenticar(email, senha).subscribe({\n        next: (value) => {\n          console.log('Autenticado com sucesso', value)\n          this.router.navigateByUrl('/')\n          this.loginForm.reset();\n        },\n        error: (err) => {\n          console.log('Problema na autenticação', err)\n        },\n      })\n    }\n  }\n}\n","<app-banner\n  src=\"assets/imagens/banner-login.png\"\n  alt=\"Banner da tela de login\">\n</app-banner>\n<section class=\"login-component\">\n  <mat-card class=\"login\">\n    <div class=\"image-container\">\n      <figure>\n        <img src=\"assets/imagens/simbolo-bussola.png\" alt=\"Símbolo de uma bússola laranja\">\n      </figure>\n    </div>\n    <div class=\"form-container\">\n      <mat-card-header>\n        <mat-card-title>Login</mat-card-title>\n      </mat-card-header>\n      <form [formGroup]=\"loginForm\">\n        <mat-card-content>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>E-mail</mat-label>\n            <input matInput formControlName=\"email\" type=\"email\" placeholder=\"Digite seu e-mail\">\n            <mat-error *ngIf=\"loginForm.get('email')?.errors?.['required']\">E-mail é obrigatório</mat-error>\n            <mat-error *ngIf=\"loginForm.get('email')?.errors?.['email']\">E-mail inválido</mat-error>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Senha</mat-label>\n            <input matInput formControlName=\"senha\" type=\"password\" placeholder=\"Digite sua senha\">\n            <mat-error *ngIf=\"loginForm.get('senha')?.errors\">Senha é obrigatória</mat-error>\n          </mat-form-field>\n        </mat-card-content>\n        <mat-card-actions>\n          <button [disabled]=\"loginForm.invalid\" mat-flat-button color=\"primary\" (click)=\"login()\">\n            ACESSAR MINHA CONTA\n          </button>\n        </mat-card-actions>\n        <p>Ainda não possui conta?\n          <a routerLink=\"/cadastro\"><strong><u>Clique aqui para se cadastrar!</u></strong></a>\n        </p>\n      </form>\n    </div>\n  </mat-card>\n</section>\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { jwt_decode } from 'jwt-decode';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./token.service\";\nexport class UserService {\n  constructor(tokenService) {\n    this.tokenService = tokenService;\n    this.userSubject = new BehaviorSubject(null);\n    if (this.tokenService.possuiToken()) {\n      this.decodificarJWT();\n    }\n  }\n  decodificarJWT() {\n    const token = this.tokenService.retornarToken();\n    const user = jwt_decode(token);\n    this.userSubject.next(user);\n  }\n  retornarUser() {\n    return this.userSubject.asObservable();\n  }\n  salvarToken(token) {\n    this.tokenService.salvarToken(token);\n    this.decodificarJWT();\n  }\n  logout() {\n    this.tokenService.excluirToken();\n    this.userSubject.next(null);\n  }\n  estaLogado() {\n    return this.tokenService.possuiToken();\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.TokenService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,QAAQ,YAAY;AACvC,SAASC,eAAe,QAAQ,MAAM;;;AAMtC,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAFxB,gBAAW,GAAG,IAAIH,eAAe,CAAuB,IAAI,CAAC;IAGnE,IAAG,IAAI,CAACG,YAAY,CAACC,WAAW,EAAE,EAAE;MAClC,IAAI,CAACC,cAAc,EAAE;;EAEzB;EAEQA,cAAc;IACpB,MAAMC,KAAK,GAAG,IAAI,CAACH,YAAY,CAACI,aAAa,EAAE;IAC/C,MAAMC,IAAI,GAAGT,UAAU,CAACO,KAAK,CAAkB;IAC/C,IAAI,CAACG,WAAW,CAACC,IAAI,CAACF,IAAI,CAAC;EAC7B;EAEAG,YAAY;IACV,OAAO,IAAI,CAACF,WAAW,CAACG,YAAY,EAAE;EACxC;EAEAC,WAAW,CAACP,KAAa;IACvB,IAAI,CAACH,YAAY,CAACU,WAAW,CAACP,KAAK,CAAC;IACpC,IAAI,CAACD,cAAc,EAAE;EACvB;EAEAS,MAAM;IACJ,IAAI,CAACX,YAAY,CAACY,YAAY,EAAE;IAChC,IAAI,CAACN,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAC7B;EAEAM,UAAU;IACR,OAAO,IAAI,CAACb,YAAY,CAACC,WAAW,EAAE;EACxC;;AAhCWH,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAgB,SAAXhB,WAAW;EAAAiB,YAFV;AAAM","names":["jwt_decode","BehaviorSubject","UserService","constructor","tokenService","possuiToken","decodificarJWT","token","retornarToken","user","userSubject","next","retornarUser","asObservable","salvarToken","logout","excluirToken","estaLogado","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\55989\\Documents\\Projetos-WEB\\Angular\\angular-movie-listing-main\\src\\app\\core\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { TokenService } from './token.service';\nimport { jwt_decode } from 'jwt-decode';\nimport { BehaviorSubject } from 'rxjs';\nimport { PessoaUsuaria } from '../types/type';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private userSubject = new BehaviorSubject<PessoaUsuaria | null>(null);\n\n  constructor(private tokenService: TokenService) {\n    if(this.tokenService.possuiToken()) {\n      this.decodificarJWT();\n    }\n  }\n\n  private decodificarJWT() {\n    const token = this.tokenService.retornarToken();\n    const user = jwt_decode(token) as PessoaUsuaria;\n    this.userSubject.next(user);\n  }\n\n  retornarUser() {\n    return this.userSubject.asObservable();\n  }\n\n  salvarToken(token: string) {\n    this.tokenService.salvarToken(token);\n    this.decodificarJWT();\n  }\n\n  logout() {\n    this.tokenService.excluirToken();\n    this.userSubject.next(null);\n  }\n\n  estaLogado() {\n    return this.tokenService.possuiToken();\n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}